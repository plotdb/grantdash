// Generated by LiveScript 1.3.0
(function(){
  var renderList, formModules, blockRenderer, blocks, bmgr, blocksView, reb;
  renderList = function(arg$){
    var node, data, localData, view;
    node = arg$.node, data = arg$.data;
    localData = data.data || (data.data = []);
    return (node.view || (node.view = {})).list = view = new ldView({
      root: node,
      action: {
        click: {
          "list-add": function(){
            localData.push({
              title: "某個點",
              desc: "某個點的描述"
            });
            return view.render();
          }
        }
      },
      handler: {
        list: {
          list: function(){
            return localData;
          },
          init: function(arg$){
            var node, data, editable, view;
            node = arg$.node, data = arg$.data;
            editable = node.hasAttribute('data-user-editable');
            if (!editable) {
              node.removeAttribute('draggable');
            }
            return node.view = view = new ldView({
              root: node,
              action: {
                input: {
                  "list-data": function(arg$){
                    var node;
                    node = arg$.node;
                    return data[node.getAttribute('data-name')] = node.innerText;
                  }
                }
              },
              init: {
                "list-data": function(arg$){
                  var node;
                  node = arg$.node;
                  node.setAttribute('data-name', node.getAttribute('editable'));
                  if (!editable) {
                    return node.removeAttribute('editable');
                  }
                }
              },
              handler: {
                "list-data": function(arg$){
                  var node;
                  node = arg$.node;
                  return node.innerText = data[node.getAttribute('data-name')] || '';
                }
              }
            });
          },
          render: function(arg$){
            var node;
            node = arg$.node;
            return node.render();
          }
        }
      }
    });
  };
  formModules = {
    "form-radio": renderList,
    "form-checkbox": renderList,
    "form-checkpoint": renderList
  };
  blockRenderer = function(arg$){
    var node, data;
    node = arg$.node, data = arg$.data;
    return (node.view || (node.view = {})).block = new ldView({
      root: node,
      action: {
        input: {
          title: function(arg$){
            var node, evt;
            node = arg$.node, evt = arg$.evt;
            return data.title = node.innerText;
          },
          desc: function(arg$){
            var node, evt;
            node = arg$.node, evt = arg$.evt;
            return data.desc = node.innerText;
          }
        }
      },
      handler: {
        title: function(arg$){
          var node;
          node = arg$.node;
          node.innerText = data.title;
          return node.removeAttribute('editable');
        },
        desc: function(arg$){
          var node;
          node = arg$.node;
          node.innerText = data.desc;
          return node.removeAttribute('editable');
        },
        "edit-only": function(arg$){
          var node;
          node = arg$.node;
          return node.remove();
        }
      }
    });
  };
  blocks = [
    {
      name: "form-short-answer",
      title: "提問的標題1",
      desc: "提問的描述",
      config: {
        required: true
      },
      criteria: [{}]
    }, {
      name: "form-long-answer",
      title: "提問的標題2",
      desc: "提問的描述",
      config: {
        required: true
      },
      criteria: [{}]
    }, {
      name: "form-checkpoint",
      title: "提問的標題3",
      desc: "提問的描述",
      data: [{
        title: "第一個點",
        desc: "第一個點的描述"
      }],
      config: {
        required: true
      },
      criteria: [{}]
    }, {
      name: "form-radio",
      title: "提問的標題3",
      desc: "提問的描述",
      data: [{
        title: "第一個點",
        desc: "第一個點的描述"
      }],
      config: {
        required: true
      },
      criteria: [{}]
    }, {
      name: "form-checkbox",
      title: "提問的標題3",
      desc: "提問的描述",
      data: [{
        title: "第一個點",
        desc: "第一個點的描述"
      }],
      config: {
        required: true
      },
      criteria: [{}]
    }
  ];
  bmgr = {
    get: function(name){
      return new Promise(function(res, rej){
        var n, div;
        n = ld$.find("[data-name=" + name + "]", 0);
        if (!n) {
          rej(new Error("block not found"));
        }
        div = ld$.create({
          name: "div",
          attr: {
            draggable: true
          }
        });
        div.appendChild(n.cloneNode(true));
        return res(div);
      });
    }
  };
  blocksView = new ldView({
    root: '#form',
    handler: {
      block: {
        list: function(){
          return blocks;
        },
        init: function(arg$){
          var node, data;
          node = arg$.node, data = arg$.data;
          return bmgr.get(data.name).then(function(n){
            var that;
            n = n.childNodes[0];
            n.parentNode.removeChild(n);
            node.innerHTML = "";
            node.appendChild(n);
            blockRenderer({
              node: node,
              data: data
            });
            if (that = formModules[data.name]) {
              return that({
                node: node,
                data: data
              });
            }
          });
        }
      }
    }
  });
  return reb = new reblock({
    root: '#form',
    blockManager: bmgr,
    action: {
      afterMoveNode: function(arg$){
        var src, des, ib, n;
        src = arg$.src, des = arg$.des, ib = arg$.ib;
        if (src.parentNode.hasAttribute('hostable')) {
          n = src.parentNode;
          while (n && !n._data) {
            n = n.parentNode;
          }
          if (!n) {
            return;
          }
          n._data.data = Array.from(src.parentNode.childNodes).filter(function(it){
            return it.nodeType === 1;
          }).map(function(it){
            return it._data;
          }).filter(function(it){
            return it;
          });
          return n.view.list.render();
        }
      }
    }
  });
})();
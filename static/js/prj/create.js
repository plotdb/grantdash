// Generated by LiveScript 1.3.0
ldc.register(['general', 'ldcvmgr', 'adminInfo', 'prjCreate', 'auth', 'error', 'loader', 'general'], function(arg$){
  var general, ldcvmgr, adminInfo, prjCreate, auth, error, loader, lc, key;
  general = arg$.general, ldcvmgr = arg$.ldcvmgr, adminInfo = arg$.adminInfo, prjCreate = arg$.prjCreate, auth = arg$.auth, error = arg$.error, loader = arg$.loader, general = arg$.general;
  loader.on();
  lc = {};
  key = /^\/(?:dash\/)?brd\/([^/]+)\/prj\/create/.exec(window.location.pathname) || /^\/(?:dash\/)?brd\/([^/]+)\/grp\/([^/]+)\/prj\/create/.exec(window.location.pathname) || [];
  key = {
    brd: key[1],
    grp: key[2]
  };
  return auth.get().then(function(){
    return ld$.fetch("/dash/api/brd/" + key.brd + "/form", {
      method: 'GET'
    }, {
      type: 'json'
    });
  }).then(function(brd){
    var ref$, root, n, showGrp, info, view;
    lc.brd = brd;
    lc.grps = (ref$ = brd.detail).group || (ref$.group = {});
    lc.grp = lc.grps.filter(function(it){
      return it.key === key.grp;
    })[0] || lc.grps[0];
    if (!lc.grp) {
      return Promise.reject(new Error(1015, "group is not found"));
    }
    root = ld$.find('[ld-scope=prj-create]', 0);
    n = ld$.find(root, 'input[name=brd]', 0);
    n.value = lc.brd.slug;
    showGrp = lc.grps.length === 1 ? false : true;
    info = new adminInfo({
      root: root,
      type: 'prj'
    });
    view = new ldView({
      root: root,
      action: {
        input: {
          grp: function(arg$){
            var node;
            node = arg$.node;
            key.grp = node.value;
            lc.grp = lc.grps.filter(function(it){
              return it.key === key.grp;
            })[0];
            return view.render();
          }
        }
      },
      handler: {
        "grp-option": {
          list: function(){
            return lc.grps;
          },
          handler: function(arg$){
            var node, data;
            node = arg$.node, data = arg$.data;
            node.value = data.key;
            return node.innerText = data.info.name;
          }
        },
        "brd-name": function(arg$){
          var node;
          node = arg$.node;
          return node.innerText = lc.brd.name;
        },
        "grp-name": function(arg$){
          var node;
          node = arg$.node;
          return node.innerText = lc.grp.info.name;
        },
        "show-grp": function(arg$){
          var node;
          node = arg$.node;
          return node.classList.toggle('d-none', !showGrp);
        },
        "inited": function(arg$){
          var node;
          node = arg$.node;
          return node.classList.toggle('invisible', false);
        }
      }
    });
    n = ld$.find(root, 'select[name=grp]', 0);
    return n.value = lc.grp.key;
  })['finally'](function(){
    return loader.off();
  })['catch'](error());
});
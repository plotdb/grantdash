// Generated by LiveScript 1.3.0
ldc.register(['util', 'viewLocals'], function(arg$){
  var util, viewLocals, fullCount, prj, cur, ref$, ref1$, lc, query, badge, view;
  util = arg$.util, viewLocals = arg$.viewLocals;
  fullCount = (viewLocals[0] || {}).full_count;
  prj = viewLocals[0] || {};
  cur = {
    offset: util.parseQuerystring("offset"),
    limit: (ref$ = (ref1$ = +util.parseQuerystring("limit") || 24) > 1 ? ref1$ : 1) < 100 ? ref$ : 100
  };
  lc = {};
  query = util.parseQuerystring();
  badge = (query.badge || '').split(',').filter(function(it){
    return it;
  });
  return view = new ldView({
    root: '[ld-scope=project-list]',
    action: {
      click: {
        search: function(){
          var name;
          name = view.get("search-input").value || '';
          if (name) {
            return window.location.href = window.location.pathname + ("?keyword=" + name);
          }
        },
        "badge-btn": function(arg$){
          var node, n;
          node = arg$.node;
          n = node.getAttribute('data-name');
          return window.location.href = window.location.pathname + (n === 'all'
            ? ''
            : "?badge=" + n);
        }
      }
    },
    handler: {
      "badge-btn": function(arg$){
        var node, n, active;
        node = arg$.node;
        n = node.getAttribute('data-name');
        active = n !== 'all'
          ? in$(n, badge)
          : !badge.length;
        return node.classList.toggle('active', active);
      },
      "search-input": function(arg$){
        var node;
        node = arg$.node;
        return node.value = util.parseQuerystring("keyword") || '';
      },
      pagination: {
        list: function(){
          var i$, to$, results$ = [];
          for (i$ = 0, to$ = Math.ceil(fullCount / 24); i$ < to$; ++i$) {
            results$.push(i$);
          }
          return results$;
        },
        handler: function(arg$){
          var node, data, offset;
          node = arg$.node, data = arg$.data;
          node.innerText = data + 1;
          offset = data * cur.limit;
          return node.setAttribute('href', "/dash/brd/" + prj.brd + "/list?offset=" + offset);
        }
      }
    }
  });
});
function in$(x, xs){
  var i = -1, l = xs.length >>> 0;
  while (++i < l) if (x === xs[i]) return true;
  return false;
}
// Generated by LiveScript 1.3.0
ldc.register(['prjForm', 'loader', 'ldcvmgr'], function(arg$){
  var prjForm, loader, ldcvmgr, ldcv, sdb, hubs;
  prjForm = arg$.prjForm, loader = arg$.loader, ldcvmgr = arg$.ldcvmgr;
  ldcv = new ldCover({
    root: '[ld-scope=prj-diff]'
  });
  ldcv.get().then(function(){
    return console.log('hi');
  });
  loader.on();
  console.log("initializing ...");
  sdb = sdb = new sharedbWrapper({
    url: {
      scheme: window.location.protocol.replace(':', ''),
      domain: window.location.host
    }
  });
  sdb.on('close', function(){
    loader.on();
    return sdb.reconnect().then(function(){
      return prepare();
    }).then(function(){
      return loader.off();
    });
  });
  hubs = {
    brd: new Hub({
      sdb: sdb
    }),
    prj: new Hub({
      sdb: sdb
    })
  };
  console.log("connect to sharedb brd-4 doc..");
  return sdb.get({
    id: "brd-4",
    watch: function(){}
  }).then(function(doc){
    hubs.brd.doc = doc;
    return sdb.get({
      id: "prj-sample",
      watch: function(ops, source){
        return hubs.prj.fire('change', {
          ops: ops,
          source: source
        });
      }
    });
  }).then(function(doc){
    var form, ref$;
    hubs.prj.doc = doc;
    form = new prjForm({
      root: '[ld-scope=prj-form]',
      viewMode: true,
      form: ((ref$ = hubs.brd.doc.data.group["grp-dcw5apu5fe9"]).form || (ref$.form = {})).list || []
    });
    form.adapt({
      hub: hubs.prj,
      path: ['content']
    });
    console.log("adapted");
    return loader.off();
  })['catch'](function(it){
    console.log(it);
    loader.off();
    return ldcvmgr.toggle('error');
  });
});
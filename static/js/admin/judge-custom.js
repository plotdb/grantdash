// Generated by LiveScript 1.3.0
ldc.register('adminJudgeCustom', ['ldcvmgr', 'auth', 'sdbAdapter', 'error', 'adminPanel', 'adminEntry'], function(arg$){
  var ldcvmgr, auth, sdbAdapter, error, adminPanel, adminEntry, Ctrl;
  ldcvmgr = arg$.ldcvmgr, auth = arg$.auth, sdbAdapter = arg$.sdbAdapter, error = arg$.error, adminPanel = arg$.adminPanel, adminEntry = arg$.adminEntry;
  Ctrl = function(opt){
    var root, sample, this$ = this;
    opt == null && (opt = {});
    this.opt = opt;
    this.root = root = typeof opt.root === 'string'
      ? document.querySelector(opt.root)
      : opt.root;
    this.path = opt.path;
    this.brd = opt.brd;
    this.grp = null;
    this.data = {};
    sample = function(arg$){
      var key;
      key = arg$.key;
      return {
        name: "評選表",
        slug: suuid(),
        type: "score",
        view: 'default',
        enabled: false,
        anonymous: false,
        filter: '',
        key: key
      };
    };
    this.entry = new adminEntry({
      root: root,
      sample: sample
    });
    this.entry.on('toggle', function(){
      return this$.view.render();
    });
    this.view = new ldView({
      root: root,
      handler: {
        "user-link": function(arg$){
          var node, active;
          node = arg$.node;
          active = this$.entry.obj.active;
          if (!(this$.grp && active)) {
            return;
          }
          return node.setAttribute('href', "/dash/brd/" + this$.brd.slug + "/grp/" + this$.grp.key + "/judge/custom/" + this$.entry.obj.active.slug + "/user");
        },
        "all-link": function(arg$){
          var node, active;
          node = arg$.node;
          active = this$.entry.obj.active;
          if (!(this$.grp && active)) {
            return;
          }
          return node.setAttribute('href', "/dash/brd/" + this$.brd.slug + "/grp/" + this$.grp.key + "/judge/custom/" + this$.entry.obj.active.slug + "/all");
        }
      }
    });
    return this;
  };
  Ctrl.prototype = import$(Object.create(Object.prototype), {
    setData: function(grp){
      this.grp = grp;
      return this.view.render();
    },
    setPath: function(it){
      this.entry.setPath(it);
      return this.view.render();
    },
    setDoc: function(it){
      return this.entry.setDoc(it);
    },
    adapted: function(){
      return this.entry.adapted();
    },
    adapt: function(arg$){
      var hub, path, type;
      hub = arg$.hub, path = arg$.path, type = arg$.type;
      this.entry.adapt({
        hub: hub,
        path: path,
        type: type
      });
      return this.view.render();
    }
  });
  return Ctrl;
});
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
// Generated by LiveScript 1.3.0
var slice$ = [].slice;
(function(){
  var Adopter;
  window.Adopter = Adopter = function(){
    this.doc = null;
    this.sdb = null;
    this.data = null;
    this.evtHandler = {};
    return this;
  };
  return Adopter.prototype = import$(Object.create(Object.prototype), {
    on: function(n, cb){
      var ref$;
      return ((ref$ = this.evtHandler)[n] || (ref$[n] = [])).push(cb);
    },
    fire: function(n){
      var v, i$, ref$, len$, cb, results$ = [];
      v = slice$.call(arguments, 1);
      for (i$ = 0, len$ = (ref$ = this.evtHandler[n] || []).length; i$ < len$; ++i$) {
        cb = ref$[i$];
        results$.push(cb.apply(this, v));
      }
      return results$;
    },
    install: function(it){
      this.sdb = it.sdb;
      this.doc = it.doc;
      this.data = this.doc.data;
      return this.watch({
        data: this.data
      });
    },
    updateField: function(n, v){
      var cur, ops;
      cur = JSON.parse(JSON.stringify(this.data));
      cur[n] = v;
      ops = this.sdb.json.diff(this.data, cur);
      this.update(ops);
      return this.data[n] = v;
    },
    update: function(ops){
      if (ops && ops.length) {
        return this.doc.submitOp(ops);
      }
    },
    watch: function(arg$){
      var ops, data;
      ops = arg$.ops, data = arg$.data;
      if (data) {
        this.data = data;
      }
      return this.fire('change', {
        ops: ops,
        data: data
      });
    }
  });
})();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
// Generated by LiveScript 1.3.0
(function(){
  ldc.register('orgBasic', [], function(){
    var share, ldld, notify, slugs, slugCheck, form, view, k, v, adopter;
    share = {
      name: "布拉國",
      description: "告訴你一個神秘的地方..."
    };
    ldld = new ldLoader({
      className: "ldld full"
    });
    notify = new ldNotify({
      root: '.ldNotify',
      classIn: ['ld-fall-ttb-in']
    });
    slugs = {};
    tail.DateTime("input[name=starttime]");
    tail.DateTime("input[name=endtime]");
    slugCheck = debounce(500, function(n, v, e){
      var p;
      p = ld$.parent(form.fields[n], '.form-group');
      p.classList.add('running');
      return ld$.fetch('/d/o/slug-check', {
        method: 'POST'
      }, {
        json: {
          slug: v
        },
        type: 'json'
      })['finally'](function(){
        return debounce(1000).then(function(){
          return p.classList.remove('running');
        });
      }).then(function(r){
        r == null && (r = {});
        return slugs[v] = r.result === 'free' ? false : true;
      })['catch'](function(){
        return slugs[v] = true;
      }).then(function(){
        return form.check({
          n: 'slug'
        });
      });
    });
    form = new ldForm({
      root: "[ld-scope='org-basic']",
      submit: "[ld='submit']",
      afterCheck: function(s, f){
        var p;
        if (f.thumbnail.value) {
          if (!(p = ld$.parent(f.thumbnail, '.bg'))) {
            return;
          }
          ldFile.fromFile(f.thumbnail.files[0], 'dataurl').then(function(r){
            return p.style.backgroundImage = "url(" + r.result + ")";
          });
        }
        return s.all = ['name', 'slug', 'description'].reduce(function(a, b){
          return a && s[b] === 0;
        }, true) ? 0 : 2;
      },
      verify: function(n, v, e){
        adopter.update(n, v);
        if (in$(n, ['slug'])) {
          if (slugs[v] != null) {
            return slugs[v] ? 2 : 0;
          }
          slugCheck(n, v, e);
          return 1;
        }
        return !!v ? 0 : 2;
      }
    });
    view = new ldView({
      root: "[ld-scope='org-basic']",
      action: {
        click: {
          submit: function(arg$){
            var node, fd;
            node = arg$.node;
            ldld.on();
            fd = form.getfd();
            return ld$.fetch('/d/o/', {
              method: 'POST',
              body: fd
            }, {
              type: 'json'
            }).then(function(r){
              notify.send('success', '建立完成，將您導向組織主控台 ...');
              return debounce(1000).then(function(){
                return window.location.href = "/o/" + r.key + "/admin";
              });
            })['catch'](function(){
              return debounce(1000).then(function(){
                return ldld.off();
              });
            });
          }
        }
      }
    });
    for (k in share) {
      v = share[k];
      form.fields[k].value = v;
    }
    return adopter = {
      install: function(it){
        this.sdb = it.sdb;
        this.doc = it.doc;
        share = JSON.parse(JSON.stringify(this.doc.data));
        return this.watch(share);
      },
      update: function(n, v){
        var cur, op;
        cur = JSON.parse(JSON.stringify(share));
        cur[n] = v;
        console.log(share, cur);
        op = this.sdb.json.diff(share, cur);
        if (op && op.length) {
          return this.doc.submitOp(op);
        }
      },
      watch: function(data){
        var k, ref$, v, results$ = [];
        import$(share, data);
        for (k in ref$ = share) {
          v = ref$[k];
          results$.push(form.fields[k].value = v);
        }
        return results$;
      }
    };
  });
  return ldc.app('orgBasic');
})();
function in$(x, xs){
  var i = -1, l = xs.length >>> 0;
  while (++i < l) if (x === xs[i]) return true;
  return false;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
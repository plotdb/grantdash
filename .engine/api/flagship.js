// Generated by LiveScript 1.3.0
(function(){
  var fs, fsExtra, path, crypto, lderror, suuid, mimeTypes, aux, cache, common, grecaptcha, throttle, storage, options;
  fs = require('fs');
  fsExtra = require('fs-extra');
  path = require('path');
  crypto = require('crypto');
  lderror = require('lderror');
  suuid = require('suuid');
  mimeTypes = require('mime-types');
  suuid = require('suuid');
  aux = require('../aux');
  cache = require('./cache');
  common = require('./common');
  grecaptcha = require('../util/grecaptcha');
  throttle = require('../util/throttle');
  storage = require('@google-cloud/storage');
  storage = new storage.Storage({
    projectId: 'taicca',
    keyFilename: 'config/key/taicca.json'
  });
  options = {
    action: 'write',
    version: 'v4',
    expires: Date.now() + 1000 * 60
  };
  (function(it){
    return module.exports = it;
  })(function(engine, io){
    var api, app;
    api = engine.router.api;
    app = engine.app;
    return api.post('/flagship/upload', function(req, res){
      var filename, id;
      filename = req.body.filename;
      id = suuid();
      options.expires = Date.now() + 1000 * 60;
      return storage.bucket('taicca-test').file(id).getSignedUrl(options).then(function(it){
        return res.send({
          signedUrl: it[0],
          id: id
        });
      })['catch'](aux.errorHandler(res));
    });
  });
}).call(this);

// Generated by LiveScript 1.3.0
(function(){
  var fs, fsExtra, path, crypto, readChunk, sharp, expressFormidable, uploadr, lderror, suuid, cache, aux, throttle, grecaptcha;
  fs = require('fs');
  fsExtra = require('fs-extra');
  path = require('path');
  crypto = require('crypto');
  readChunk = require('read-chunk');
  sharp = require('sharp');
  expressFormidable = require('express-formidable');
  uploadr = require('uploadr');
  lderror = require('lderror');
  suuid = require('suuid');
  cache = require('./cache');
  aux = require('../aux');
  throttle = require('../util/throttle');
  grecaptcha = require('../util/grecaptcha');
  (function(it){
    return module.exports = it;
  })(function(engine, io){
    var api, app;
    api = engine.router.api;
    app = engine.app;
    api.get('/form/:slug', aux.signed, function(req, res){
      var slug;
      if (!(slug = req.params.slug)) {
        return aux.r400(res);
      }
      return io.query("select slug, detail from form\nwhere owner = $1 and slug = $2 and deleted is not true", [req.user.key, slug]).then(function(r){
        r == null && (r = {});
        return res.send((r.rows || (r.rows = []))[0] || {});
      })['catch'](aux.errorHandler(res));
    });
    return api.post('/form', aux.signed, throttle.count.userMd, grecaptcha, function(req, res){
      var lc, scopeList, scope;
      lc = {};
      scopeList = req.body.scope || [];
      scope = ["form/basic-info"];
      if (in$('org', scopeList)) {
        if (!req.scope.org) {
          return aux.r400(res);
        }
        scope.push("org/" + req.scope.org);
      }
      if (in$('brd', scopeList)) {
        if (!req.scope.brd) {
          return aux.r400(res);
        }
        scope.push("brd/" + req.scope.brd);
      }
      scope = scope.join('/');
      return io.query("select slug from form where owner = $1 and scope = $2 and deleted is not true", [req.user.key, scope]).then(function(r){
        var ret;
        r == null && (r = {});
        if (ret = (r.rows || (r.rows = []))[0]) {
          return res.send(ret);
        }
        lc.slug = suuid();
        return io.query("insert into form (slug,scope,owner) values ($1,$2,$3)", [lc.slug, scope, req.user.key]).then(function(){
          return res.send(lc);
        });
      })['catch'](aux.errorHandler(res));
    });
  });
  function in$(x, xs){
    var i = -1, l = xs.length >>> 0;
    while (++i < l) if (x === xs[i]) return true;
    return false;
  }
}).call(this);
